buildscript {
    ext.typesafe_config_version = '1.3.1'
    ext.corda_release_group = 'net.corda'
    ext.corda_release_version = '3.1-corda'
    ext.corda_gradle_plugins_version = '3.1.0'
    ext.kotlin_version = '1.2.70'
    ext.junit_version = '4.12'
    ext.quasar_version = '0.7.9'
    ext.spring_boot_version = '2.0.4.RELEASE'


    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'https://dl.bintray.com/kotlin/kotlin-eap/'
        }
        maven {
            url "https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases"
        }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

plugins {
    id 'org.springframework.boot' version '2.0.4.RELEASE'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://dl.bintray.com/kotlin/kotlin-eap/'
    }
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
}

//group = "com.roastario"
//version = "1.0-SNAPSHOT"

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin-noarg'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

ext {
    spring_version = '2.0.4.RELEASE'
    corda_release_version = '3.1-corda'
    corda_group = 'net.corda'
}

configurations {
    notaryRuntime
    notaryRuntime.transitive = false
}

dependencies {
    // Spring boot dependencies
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-finance:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"

    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.21.0.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: "com.typesafe", name: "config", version: typesafe_config_version
    compile group: 'io.github.classgraph', name: 'classgraph', version: '4.4.12'

    testCompile "org.jetbrains.kotlin:kotlin-test"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"
    testCompile("org.springframework.boot:spring-boot-starter-test:$spring_boot_version")
}

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
}

//task copyCordaJar() {
//    def cordaJarName = file(project.configurations.notaryRuntime.first()).name
//    copy {
//        from project.configurations.notaryRuntime.first()
//        into "${buildDir}"
//    }
//    file("${buildDir}/${cordaJarName}").renameTo("${buildDir}/corda.jar")
//}
//
//
//task copyNetworkMapJar() {
//    def networkMapJarName = file(jar.archivePath).name
//    copy {
//        from jar.archivePath
//        into "${buildDir}"
//    }
//    file("${buildDir}/${networkMapJarName}").renameTo("${buildDir}/app.jar")
//}


task runNetworkMapServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'io.nmap.NetworkMapServerKt'
    environment "server.port", "7080"
    environment "spring.profiles.active", "dev"
}

